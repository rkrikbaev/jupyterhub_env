version: "3"
services:
  
  nginx:
    restart: always
    build: ./nginx
    image: proxy_nginx
    container_name: nginx
    ports:
        - "80:80"
    depends_on:
        - mlflow
    networks:
        - global-network
        - default
  db:
      restart: always
      image: mysql/mysql-server:5.7.28
      container_name: mlflow_db
      expose:
          - "3306"
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
          - dbdata:/var/lib/mysql
          - /usr/local/etc/db_mlflow/conf.d:/etc/mysql/conf.d
      networks:
          - global-network

  mlflow:
      restart: always
      build: ./mlflow
      image: mlflow_server
      container_name: mlflow_server
      ports:
          - 5000:5000
      command: 'mlflow server 
              --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} 
              --default-artifact-root file:/opt/mlruns
              --host 0.0.0.0 -p 5000'
      depends_on:
        - db
      networks:
        - global-network

  hub:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        JUPYTERHUB_VERSION: latest
    restart: always
    image: jupyterhub
    container_name: jupyterhub
    networks:
      - global-network
    volumes:
      # The JupyterHub configuration file
      - "./jupyterhub_config.py:/etc/jupyterhub/jupyterhub_config.py:ro"
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "jupyterhub-data:/data"
    ports:
      - "8000:8000"
    environment:
      # This username will be a JupyterHub admin
      JUPYTERHUB_ADMIN: admin
      # All containers will join this network
      DOCKER_NETWORK_NAME: jupyterhub-network
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: jupyter/base-notebook:latest
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: /home/jovyan/work
      # Using this run command
      DOCKER_SPAWN_CMD: start-singleuser.sh
    command: jupyterhub --port 8000 -f /etc/jupyterhub/jupyterhub_config.py

volumes:
  jupyterhub-data:
  dbdata:

networks:
  global-network:
    external:
      name: global-network
